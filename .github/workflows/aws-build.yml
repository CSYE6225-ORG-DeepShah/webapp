name: AMI build

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: create and configure
        run: |
          touch .env
          echo pd=${{ secrets.PASSWORD }}>> .env
          echo database=${{ secrets.DATABASE }} >> .env
          echo user=${{ secrets.USER }} >> .env

      - name: Zipping all files
        run: zip -r webapp.zip .

      - name: Install Packer
        run: |
          wget https://releases.hashicorp.com/packer/1.7.2/packer_1.7.2_linux_amd64.zip
          unzip -j packer_1.7.2_linux_amd64.zip -d /tmp
          chmod +x /tmp/packer
          sudo mv /tmp/packer /usr/local/bin/
          packer version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Packer Intialization
        run : packer init .

      - name: Check build of packer
        run: packer build -var 'MY_PASSWORD=${{ secrets.PASSWORD }}' -var 'MY_DATABASE=${{ secrets.DATABASE }}' -var 'MY_USER=${{ secrets.USER }}' -var-file="variables.pkrvars.hcl" aws-ami.pkr.hcl

      - name: Retrive AMI ID
        run: |
          echo AMI_ID=$(jq -r '.builds[-1].artifact_id' ./manifest.json | cut -d ":" -f2) >> $GITHUB_ENV
        shell: bash

      - name: Create Version of Launch Template
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEMO_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEMO_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ec2 create-launch-template-version --launch-template-name ec2LT --source-version 1 --launch-template-data name: Packer build
on:
  push:
    branches: [main]

jobs:
  build:
    name: packer workflow
    runs-on: ubuntu-latest
    strategy: 
        matrix:
            node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.5.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
        

      - name: Zip folder creation
        run: |
          mkdir app_artifact
          zip -r webapp . -x ".git/" ".github/" "node_modules/*" "packer" "app_artifact"
          mv webapp.zip app_artifact
  
      - name: Validate Template
        run: |
          packer init ami.pkr.hcl
          packer validate ami.pkr.hcl
          packer build ami.pkr.hcl
      
      - name: Retrive AMI ID
        run: |
          echo AMI_ID=$(jq -r '.builds[-1].artifact_id' ./manifest.json | cut -d ":" -f2) >> $GITHUB_ENV
        shell: bash

      - name: Create Version of Launch Template
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEMO_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEMO_SECRET_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

        run: |
          aws ec2 create-launch-template-version --launch-template-name autoscaling-launch-configuration --source-version 1 --launch-template-data '{"ImageId":"${{ env.AMI_ID }}"}'
          echo "Launch template ID completed"

      - name: Instance refresh auto scale to use new launch template version
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEMO_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEMO_SECRET_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws autoscaling start-instance-refresh --auto-scaling-group-name autoscaling-group
          echo "Instance refresh for Launch template ID in AS completed"
          echo "Launch template ID completed"

      - name: Instance refresh auto scale to use new launch template version
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEMO_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEMO_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws autoscaling start-instance-refresh --auto-scaling-group-name auto-scaling-group
          echo "Instance refresh for Launch template ID in AS completed"
#